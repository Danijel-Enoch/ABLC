{"ast":null,"code":"import { ethers } from \"ethers\";\nimport axios from 'axios';\nconst address = \"0x2c9F84Baa3071Dac7661c48760Ca78f601d95fF1\";\n\n//approve\nasync function approve(amount, token) {\n  const provider = new ethers.providers.Web3Provider(window.ethereum);\n  const signer = provider.getSigner();\n  const abi = [\"function approve(address spender, uint256 amount) returns (bool)\"];\n  const contract = new ethers.Contract(token, abi, signer);\n  const tx = await contract.functions.approve(\"0x2c9F84Baa3071Dac7661c48760Ca78f601d95fF1\", amount);\n  const receipt = await tx.wait();\n  console.log(\"receipt\", receipt);\n}\nexport async function allowance(token, spender, owner) {\n  const provider = new ethers.providers.JsonRpcProvider(\"https://bsc-dataseed4.binance.org\");\n  const abi = [\"function allowance(address owner, address spender) view returns (uint256)\"];\n  const contract = new ethers.Contract(token, abi, provider);\n  const result = await contract.functions.allowance(owner, spender);\n  console.log(\"result\", parseFloat(result[0].toString()));\n  return parseFloat(result[0].toString());\n}\n\n//create Order\nasync function CreateOrder(orderType, tokenA, tokenB, baseAmount, quoteAmount) {\n  const provider = new ethers.providers.Web3Provider(window.ethereum);\n  const signer = provider.getSigner();\n  const abi = [\"function CreateOrder(string _orderType, address _tokenA, address _tokenB, uint256 _baseAmount, uint256 _quoteAmount) payable\"];\n  const contract = new ethers.Contract(\"0x2c9F84Baa3071Dac7661c48760Ca78f601d95fF1\", abi, signer);\n  const tx = await contract.functions.CreateOrder(orderType.toString(), tokenA.toString(), tokenB.toString(), baseAmount.toString(), quoteAmount.toString());\n  const receipt = await tx.wait();\n  console.log(\"receipt\", receipt);\n}\n_c = CreateOrder;\nexport const createPair = async (orderType, tokenA, tokenB, baseAmount, quoteAmount) => {\n  const provider = new ethers.providers.Web3Provider(window.ethereum);\n  const signer = provider.getSigner();\n  const owner = signer.getAddress();\n  alert(\"approving Token\");\n  const amountOfAllowance = await allowance(tokenA, address, owner);\n  await approve(\"10000000000000000000000000000\", tokenA).then(async res => {\n    alert(\"creating Order\");\n    await CreateOrder(orderType, tokenA, tokenB, ethers.utils.parseUnits(baseAmount, 8), ethers.utils.parseUnits(quoteAmount, 18));\n  });\n};\nexport async function ablcPrice() {\n  const abi = [\"function ablcPrice() view returns (uint256)\"];\n  const provider = new ethers.providers.JsonRpcProvider(\"https://bsc-dataseed4.binance.org\");\n  const contract = new ethers.Contract(address, abi, provider);\n  const result = await contract.functions.ablcPrice();\n  console.log(\"result\", parseFloat(result[0].toString()) / 1000000000000000000);\n  const cPrice = parseFloat(result[0].toString()) / 1000000000000000000;\n  return cPrice;\n}\nexport async function UsdtPrice() {\n  const abi = [\"function UsdtPrice() view returns (uint256)\"];\n  const provider = new ethers.providers.JsonRpcProvider(\"https://bsc-dataseed4.binance.org\");\n  const contract = new ethers.Contract(address, abi, provider);\n  const result = await contract.functions.UsdtPrice();\n  console.log(\"result\", parseFloat(result[0].toString()) / 1000000000000000000);\n  const cPrice = parseFloat(result[0].toString()) / 1000000000000000000;\n  return cPrice;\n}\n_c2 = UsdtPrice;\nexport async function BusdPrice() {\n  const abi = [\"function BusdPrice() view returns (uint256)\"];\n  const provider = new ethers.providers.JsonRpcProvider(\"https://bsc-dataseed4.binance.org\");\n  const contract = new ethers.Contract(address, abi, provider);\n  const result = await contract.functions.BusdPrice();\n  console.log(\"result\", parseFloat(result[0].toString()) / 1000000000000000000);\n  const cPrice = parseFloat(result[0].toString()) / 1000000000000000000;\n  return cPrice;\n}\n_c3 = BusdPrice;\nexport async function BnbPrice() {\n  const abi = [\"function BnbPrice() view returns (uint256)\"];\n  const provider = new ethers.providers.JsonRpcProvider(\"https://bsc-dataseed4.binance.org\");\n  const contract = new ethers.Contract(address, abi, provider);\n  const result = await contract.functions.BnbPrice();\n  console.log(\"result\", parseFloat(result[0].toString()) / 1000000000000000000);\n  const cPrice = parseFloat(result[0].toString()) / 1000000000000000000;\n  return cPrice;\n}\n\n//Cancel Order\n_c4 = BnbPrice;\nasync function cancelOrder(Oid) {\n  const provider = new ethers.providers.Web3Provider(window.ethereum);\n  const signer = provider.getSigner();\n  const abi = [\"function cancelOrder(uint256 id)\"];\n  const contract = new ethers.Contract(address, abi, signer);\n  const tx = await contract.functions.cancelOrder(Oid);\n  const receipt = await tx.wait();\n  console.log(\"receipt\", receipt[0]);\n}\n\n//Exchnage\n\nexport async function Exchange(wallet, id, tokenB, quoteAmount) {\n  const provider = new ethers.providers.Web3Provider(window.ethereum);\n  const signer = provider.getSigner();\n  alert(\"Approving Token\");\n  await approve(\"1000000000000000000000000000\", tokenB).then(async res => {\n    alert(\"Exchanging\");\n    const abi = [\"function Exchange(address _wallet, uint256 id)\"];\n    const contract = new ethers.Contract(\"0x2c9F84Baa3071Dac7661c48760Ca78f601d95fF1\", abi, signer);\n    const tx = await contract.functions.Exchange(wallet, id);\n    const receipt = await tx.wait();\n    console.log(\"receipt\", receipt);\n  });\n}\n\n//get orders\n_c5 = Exchange;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"CreateOrder\");\n$RefreshReg$(_c2, \"UsdtPrice\");\n$RefreshReg$(_c3, \"BusdPrice\");\n$RefreshReg$(_c4, \"BnbPrice\");\n$RefreshReg$(_c5, \"Exchange\");","map":{"version":3,"names":["ethers","axios","address","approve","amount","token","provider","providers","Web3Provider","window","ethereum","signer","getSigner","abi","contract","Contract","tx","functions","receipt","wait","console","log","allowance","spender","owner","JsonRpcProvider","result","parseFloat","toString","CreateOrder","orderType","tokenA","tokenB","baseAmount","quoteAmount","createPair","getAddress","alert","amountOfAllowance","then","res","utils","parseUnits","ablcPrice","cPrice","UsdtPrice","BusdPrice","BnbPrice","cancelOrder","Oid","Exchange","wallet","id"],"sources":["/Users/air/Downloads/ABLC/src/sdk/p2p.js"],"sourcesContent":["import { ethers } from \"ethers\";\nimport axios from 'axios';\n\nconst address = \"0x2c9F84Baa3071Dac7661c48760Ca78f601d95fF1\";\n\n\n//approve\nasync function approve(amount, token) {\n    const provider = new ethers.providers.Web3Provider(window.ethereum)\n    const signer = provider.getSigner()\n    const abi = [\n        \"function approve(address spender, uint256 amount) returns (bool)\"\n    ];\n    const contract = new ethers.Contract(token, abi, signer);\n    const tx = await contract.functions.approve(\"0x2c9F84Baa3071Dac7661c48760Ca78f601d95fF1\", amount);\n\n    const receipt = await tx.wait();\n    console.log(\"receipt\", receipt);\n}\n\n\nexport async function allowance(token, spender, owner) {\n    const provider = new ethers.providers.JsonRpcProvider(\"https://bsc-dataseed4.binance.org\");\n    const abi = [\n        \"function allowance(address owner, address spender) view returns (uint256)\"\n    ];\n    const contract = new ethers.Contract(token, abi, provider);\n    const result = await contract.functions.allowance(owner, spender);\n\n    console.log(\"result\", parseFloat(result[0].toString()));\n    return parseFloat(result[0].toString())\n}\n\n\n\n//create Order\nasync function CreateOrder(orderType, tokenA, tokenB, baseAmount, quoteAmount) {\n    const provider = new ethers.providers.Web3Provider(window.ethereum)\n    const signer = provider.getSigner()\n    const abi = [\n        \"function CreateOrder(string _orderType, address _tokenA, address _tokenB, uint256 _baseAmount, uint256 _quoteAmount) payable\"\n    ];\n    const contract = new ethers.Contract(\"0x2c9F84Baa3071Dac7661c48760Ca78f601d95fF1\", abi, signer);\n    const tx = await contract.functions.CreateOrder(orderType.toString(), tokenA.toString(), tokenB.toString(), baseAmount.toString(), quoteAmount.toString());\n\n    const receipt = await tx.wait();\n    console.log(\"receipt\", receipt);\n}\n\nexport const createPair = async (orderType, tokenA, tokenB, baseAmount, quoteAmount) => {\n    const provider = new ethers.providers.Web3Provider(window.ethereum)\n    const signer = provider.getSigner()\n    const owner = signer.getAddress()\n    alert(\"approving Token\")\n    const amountOfAllowance = await allowance(tokenA, address, owner);\n    await approve(\"10000000000000000000000000000\", tokenA).then(async (res) => {\n        alert(\"creating Order\")\n        await CreateOrder(orderType, tokenA, tokenB, ethers.utils.parseUnits(baseAmount, 8), ethers.utils.parseUnits(quoteAmount, 18));\n    })\n\n}\n\nexport async function ablcPrice() {\n    const abi = [\n        \"function ablcPrice() view returns (uint256)\"\n    ];\n    const provider = new ethers.providers.JsonRpcProvider(\"https://bsc-dataseed4.binance.org\");\n    const contract = new ethers.Contract(address, abi, provider);\n    const result = await contract.functions.ablcPrice();\n    console.log(\"result\", parseFloat(result[0].toString()) / 1000000000000000000);\n    const cPrice = parseFloat(result[0].toString()) / 1000000000000000000;\n    return cPrice;\n}\nexport async function UsdtPrice() {\n    const abi = [\n        \"function UsdtPrice() view returns (uint256)\"\n    ];\n\n    const provider = new ethers.providers.JsonRpcProvider(\"https://bsc-dataseed4.binance.org\");\n    const contract = new ethers.Contract(address, abi, provider);\n    const result = await contract.functions.UsdtPrice();\n    console.log(\"result\", parseFloat(result[0].toString()) / 1000000000000000000);\n    const cPrice = parseFloat(result[0].toString()) / 1000000000000000000;\n    return cPrice;\n}\nexport async function BusdPrice() {\n    const abi = [\n        \"function BusdPrice() view returns (uint256)\"\n    ];\n    const provider = new ethers.providers.JsonRpcProvider(\"https://bsc-dataseed4.binance.org\");\n    const contract = new ethers.Contract(address, abi, provider);\n    const result = await contract.functions.BusdPrice();\n    console.log(\"result\", parseFloat(result[0].toString()) / 1000000000000000000);\n    const cPrice = parseFloat(result[0].toString()) / 1000000000000000000;\n    return cPrice;\n}\nexport async function BnbPrice() {\n    const abi = [\n        \"function BnbPrice() view returns (uint256)\"\n    ];\n    const provider = new ethers.providers.JsonRpcProvider(\"https://bsc-dataseed4.binance.org\");\n    const contract = new ethers.Contract(address, abi, provider);\n    const result = await contract.functions.BnbPrice();\n    console.log(\"result\", parseFloat(result[0].toString()) / 1000000000000000000);\n    const cPrice = parseFloat(result[0].toString()) / 1000000000000000000;\n    return cPrice;\n}\n\n//Cancel Order\nasync function cancelOrder(Oid) {\n    const provider = new ethers.providers.Web3Provider(window.ethereum)\n    const signer = provider.getSigner()\n    const abi = [\n        \"function cancelOrder(uint256 id)\"\n    ];\n    const contract = new ethers.Contract(address, abi, signer);\n    const tx = await contract.functions.cancelOrder(Oid);\n\n    const receipt = await tx.wait();\n    console.log(\"receipt\", receipt[0]);\n}\n\n\n//Exchnage\n\n\n\nexport async function Exchange(wallet, id, tokenB, quoteAmount) {\n    const provider = new ethers.providers.Web3Provider(window.ethereum)\n    const signer = provider.getSigner()\n    alert(\"Approving Token\")\n    await approve(\"1000000000000000000000000000\", tokenB).then(async (res) => {\n        alert(\"Exchanging\")\n        const abi = [\n            \"function Exchange(address _wallet, uint256 id)\"\n        ];\n        const contract = new ethers.Contract(\"0x2c9F84Baa3071Dac7661c48760Ca78f601d95fF1\", abi, signer);\n        const tx = await contract.functions.Exchange(wallet, id);\n\n        const receipt = await tx.wait();\n        console.log(\"receipt\", receipt);\n\n    })\n\n}\n\n\n//get orders\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}