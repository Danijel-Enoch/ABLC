{"ast":null,"code":"/** PURE_IMPORTS_START _config,_util_hostReportError PURE_IMPORTS_END */\nimport { config } from './config';\nimport { hostReportError } from './util/hostReportError';\nexport var empty = {\n  closed: true,\n  next: function (value) {},\n  error: function (err) {\n    if (config.useDeprecatedSynchronousErrorHandling) {\n      throw err;\n    } else {\n      hostReportError(err);\n    }\n  },\n  complete: function () {}\n};","map":{"version":3,"mappings":"AACA;AACA,SAASA,wBAAuB;AAEhC,SAAOC,eAA6B;OAClC,IAAMC,KAAM;EACZC;EACAC,MAAK,UAALC,KAAc;OACZ,YAAWC;QACTN,MAAM,sCAAI;MACX;WACC;MACDC;IACF;EACD;EACAM","names":["config","hostReportError","empty","closed","next","value","err","complete"],"sources":["/Users/air/Downloads/ABLC/node_modules/rxjs/src/internal/Observer.ts"],"sourcesContent":["import { Observer } from './types';\nimport { config } from './config';\nimport { hostReportError } from './util/hostReportError';\n\nexport const empty: Observer<any> = {\n  closed: true,\n  next(value: any): void { /* noop */},\n  error(err: any): void {\n    if (config.useDeprecatedSynchronousErrorHandling) {\n      throw err;\n    } else {\n      hostReportError(err);\n    }\n  },\n  complete(): void { /*noop*/ }\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}