{"ast":null,"code":"/** PURE_IMPORTS_START _hostReportError PURE_IMPORTS_END */\nimport { hostReportError } from './hostReportError';\nexport var subscribeToPromise = function (promise) {\n  return function (subscriber) {\n    promise.then(function (value) {\n      if (!subscriber.closed) {\n        subscriber.next(value);\n        subscriber.complete();\n      }\n    }, function (err) {\n      return subscriber.error(err);\n    }).then(null, hostReportError);\n    return subscriber;\n  };\n};","map":{"version":3,"mappings":"AACA;AAEA,SAAOA,eAAM,QAAqB,mBAA2B;OAC3D,IAAOC,kBACJ,GAAK;SACJ,UAAKC,UAAiB,EAAE;WACtB,gBAAgBC,KAAO;MACvB,eAAW,OAAW;QACvBD;QAEHA,UAAc;MAEf;IACD,GAAO,UAAUE,GAAC;MAAA;IAAA,GAClBC","names":["hostReportError","subscribeToPromise","subscriber","value","err","then"],"sources":["/Users/air/Downloads/ABLC/node_modules/rxjs/src/internal/util/subscribeToPromise.ts"],"sourcesContent":["import { Subscriber } from '../Subscriber';\nimport { hostReportError } from './hostReportError';\n\nexport const subscribeToPromise = <T>(promise: PromiseLike<T>) => (subscriber: Subscriber<T>) => {\n  promise.then(\n    (value) => {\n      if (!subscriber.closed) {\n        subscriber.next(value);\n        subscriber.complete();\n      }\n    },\n    (err: any) => subscriber.error(err)\n  )\n  .then(null, hostReportError);\n  return subscriber;\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}