{"ast":null,"code":"/** PURE_IMPORTS_START _observable_zip PURE_IMPORTS_END */\nimport { ZipOperator } from '../observable/zip';\nexport function zipAll(project) {\n  return function (source) {\n    return source.lift(new ZipOperator(project));\n  };\n}","map":{"version":3,"mappings":"AAAA;AASA,SAAMA,WAAU,QAAa,mBAAsC;OACjE,SAAOC,MAAC,QAAqB,EAAK;EACnC;IAAA;EAAA","names":["ZipOperator","zipAll"],"sources":["/Users/air/Downloads/ABLC/node_modules/rxjs/src/internal/operators/zipAll.ts"],"sourcesContent":["import { ZipOperator } from '../observable/zip';\nimport { Observable } from '../Observable';\nimport { OperatorFunction, ObservableInput } from '../types';\n\nexport function zipAll<T>(): OperatorFunction<ObservableInput<T>, T[]>;\nexport function zipAll<T>(): OperatorFunction<any, T[]>;\nexport function zipAll<T, R>(project: (...values: T[]) => R): OperatorFunction<ObservableInput<T>, R>;\nexport function zipAll<R>(project: (...values: Array<any>) => R): OperatorFunction<any, R>;\n\nexport function zipAll<T, R>(project?: (...values: Array<any>) => R): OperatorFunction<T, R> {\n  return (source: Observable<T>) => source.lift(new ZipOperator(project));\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}