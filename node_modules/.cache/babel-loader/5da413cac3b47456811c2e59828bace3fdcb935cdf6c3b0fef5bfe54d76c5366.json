{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n// Captures 0x + 4 characters, then the last 4 characters.\nvar truncateRegex = /^(0x[a-zA-Z0-9]{4})[a-zA-Z0-9]+([a-zA-Z0-9]{4})$/;\n/**\n * Truncates an ethereum address to the format 0x0000…0000\n * @param address Full address to truncate\n * @returns Truncated address\n */\nvar truncateEthAddress = function (address) {\n  var match = address.match(truncateRegex);\n  if (!match) return address;\n  return match[1] + \"\\u2026\" + match[2];\n};\nexports.default = truncateEthAddress;","map":{"version":3,"names":["Object","defineProperty","exports","value","truncateRegex","truncateEthAddress","address","match","default"],"sources":["/Users/air/Downloads/ABLC/node_modules/truncate-eth-address/dist/index.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// Captures 0x + 4 characters, then the last 4 characters.\nvar truncateRegex = /^(0x[a-zA-Z0-9]{4})[a-zA-Z0-9]+([a-zA-Z0-9]{4})$/;\n/**\n * Truncates an ethereum address to the format 0x0000…0000\n * @param address Full address to truncate\n * @returns Truncated address\n */\nvar truncateEthAddress = function (address) {\n    var match = address.match(truncateRegex);\n    if (!match)\n        return address;\n    return match[1] + \"\\u2026\" + match[2];\n};\nexports.default = truncateEthAddress;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7D;AACA,IAAIC,aAAa,GAAG,kDAAkD;AACtE;AACA;AACA;AACA;AACA;AACA,IAAIC,kBAAkB,GAAG,UAAUC,OAAO,EAAE;EACxC,IAAIC,KAAK,GAAGD,OAAO,CAACC,KAAK,CAACH,aAAa,CAAC;EACxC,IAAI,CAACG,KAAK,EACN,OAAOD,OAAO;EAClB,OAAOC,KAAK,CAAC,CAAC,CAAC,GAAG,QAAQ,GAAGA,KAAK,CAAC,CAAC,CAAC;AACzC,CAAC;AACDL,OAAO,CAACM,OAAO,GAAGH,kBAAkB"},"metadata":{},"sourceType":"script","externalDependencies":[]}