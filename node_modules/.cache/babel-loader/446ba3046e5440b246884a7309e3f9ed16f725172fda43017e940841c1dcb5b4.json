{"ast":null,"code":"var _jsxFileName = \"/Users/air/Downloads/ABLC/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport P2PDashboard from './components/P2PDashboard';\nimport { createBrowserRouter, RouterProvider } from \"react-router-dom\";\nimport reportWebVitals from './reportWebVitals';\nimport { connectorsForWallets } from '@rainbow-me/rainbowkit';\nimport '@rainbow-me/rainbowkit/styles.css';\nimport { getDefaultWallets, RainbowKitProvider } from '@rainbow-me/rainbowkit';\nimport { injectedWallet, rainbowWallet, walletConnectWallet, trustWallet } from '@rainbow-me/rainbowkit/wallets';\nimport { configureChains, createClient, WagmiConfig } from 'wagmi';\nimport { mainnet, polygon, optimism, arbitrum, bsc, bscTestnet } from 'wagmi/chains';\nimport { alchemyProvider } from 'wagmi/providers/alchemy';\nimport { publicProvider } from 'wagmi/providers/public';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  chains,\n  provider\n} = configureChains([bsc, bscTestnet], [alchemyProvider({\n  apiKey: \"xzVklmnmmMJobYTDnfpOHvcyERSgjCnk\"\n}), publicProvider()]);\nconst connectors = connectorsForWallets([{\n  groupName: 'Recommended',\n  wallets: [injectedWallet({\n    chains\n  }), rainbowWallet({\n    chains\n  }), walletConnectWallet({\n    chains\n  }), trustWallet({\n    chains\n  })]\n}]);\nconst router = createBrowserRouter([{\n  path: \"/\",\n  element: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 14\n  }, this)\n}, {\n  path: \"/admin\",\n  element: /*#__PURE__*/_jsxDEV(P2PDashboard, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 14\n  }, this)\n}, {\n  path: \"/terms-of-service\",\n  element: /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n}]);\nconst wagmiClient = createClient({\n  autoConnect: true,\n  connectors,\n  provider\n});\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(WagmiConfig, {\n    client: wagmiClient,\n    children: /*#__PURE__*/_jsxDEV(RainbowKitProvider, {\n      showRecentTransactions: true,\n      chains: chains,\n      children: /*#__PURE__*/_jsxDEV(RouterProvider, {\n        router: router\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 71,\n  columnNumber: 3\n}, this));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();","map":{"version":3,"names":["React","ReactDOM","App","P2PDashboard","createBrowserRouter","RouterProvider","reportWebVitals","connectorsForWallets","getDefaultWallets","RainbowKitProvider","injectedWallet","rainbowWallet","walletConnectWallet","trustWallet","configureChains","createClient","WagmiConfig","mainnet","polygon","optimism","arbitrum","bsc","bscTestnet","alchemyProvider","publicProvider","chains","provider","apiKey","connectors","groupName","wallets","router","path","element","wagmiClient","autoConnect","root","createRoot","document","getElementById","render"],"sources":["/Users/air/Downloads/ABLC/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport P2PDashboard from './components/P2PDashboard';\nimport {\n  createBrowserRouter,\n  RouterProvider,\n} from \"react-router-dom\";\nimport reportWebVitals from './reportWebVitals';\nimport { connectorsForWallets } from '@rainbow-me/rainbowkit';\nimport '@rainbow-me/rainbowkit/styles.css';\nimport {\n  getDefaultWallets,\n  RainbowKitProvider,\n} from '@rainbow-me/rainbowkit';\nimport {\n  injectedWallet,\n  rainbowWallet,\n  walletConnectWallet,\n  trustWallet,\n} from '@rainbow-me/rainbowkit/wallets';\nimport { configureChains, createClient, WagmiConfig } from 'wagmi';\nimport { mainnet, polygon, optimism, arbitrum, bsc, bscTestnet } from 'wagmi/chains';\nimport { alchemyProvider } from 'wagmi/providers/alchemy';\nimport { publicProvider } from 'wagmi/providers/public';\n\nconst { chains, provider } = configureChains(\n  [bsc, bscTestnet],\n  [\n    alchemyProvider({ apiKey: \"xzVklmnmmMJobYTDnfpOHvcyERSgjCnk\" }),\n    publicProvider()\n  ]\n);\n\nconst connectors = connectorsForWallets([\n  {\n    groupName: 'Recommended',\n    wallets: [\n      injectedWallet({ chains }),\n      rainbowWallet({ chains }),\n      walletConnectWallet({ chains }),\n      trustWallet({ chains }),\n    ],\n  },\n]);\nconst router = createBrowserRouter([\n  {\n    path: \"/\",\n    element: <App />,\n  },\n  {\n    path: \"/admin\",\n    element: <P2PDashboard />,\n  },\n  {\n    path: \"/terms-of-service\",\n    element: <></>\n  },\n]);\n\n\nconst wagmiClient = createClient({\n  autoConnect: true,\n  connectors,\n  provider\n})\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <WagmiConfig client={wagmiClient}>\n      <RainbowKitProvider showRecentTransactions={true} chains={chains}>\n        <RouterProvider router={router} />\n      </RainbowKitProvider>\n    </WagmiConfig >\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAO,aAAa;AACpB,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAOC,YAAY,MAAM,2BAA2B;AACpD,SACEC,mBAAmB,EACnBC,cAAc,QACT,kBAAkB;AACzB,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,SAASC,oBAAoB,QAAQ,wBAAwB;AAC7D,OAAO,mCAAmC;AAC1C,SACEC,iBAAiB,EACjBC,kBAAkB,QACb,wBAAwB;AAC/B,SACEC,cAAc,EACdC,aAAa,EACbC,mBAAmB,EACnBC,WAAW,QACN,gCAAgC;AACvC,SAASC,eAAe,EAAEC,YAAY,EAAEC,WAAW,QAAQ,OAAO;AAClE,SAASC,OAAO,EAAEC,OAAO,EAAEC,QAAQ,EAAEC,QAAQ,EAAEC,GAAG,EAAEC,UAAU,QAAQ,cAAc;AACpF,SAASC,eAAe,QAAQ,yBAAyB;AACzD,SAASC,cAAc,QAAQ,wBAAwB;AAAC;AAAA;AAExD,MAAM;EAAEC,MAAM;EAAEC;AAAS,CAAC,GAAGZ,eAAe,CAC1C,CAACO,GAAG,EAAEC,UAAU,CAAC,EACjB,CACEC,eAAe,CAAC;EAAEI,MAAM,EAAE;AAAmC,CAAC,CAAC,EAC/DH,cAAc,EAAE,CACjB,CACF;AAED,MAAMI,UAAU,GAAGrB,oBAAoB,CAAC,CACtC;EACEsB,SAAS,EAAE,aAAa;EACxBC,OAAO,EAAE,CACPpB,cAAc,CAAC;IAAEe;EAAO,CAAC,CAAC,EAC1Bd,aAAa,CAAC;IAAEc;EAAO,CAAC,CAAC,EACzBb,mBAAmB,CAAC;IAAEa;EAAO,CAAC,CAAC,EAC/BZ,WAAW,CAAC;IAAEY;EAAO,CAAC,CAAC;AAE3B,CAAC,CACF,CAAC;AACF,MAAMM,MAAM,GAAG3B,mBAAmB,CAAC,CACjC;EACE4B,IAAI,EAAE,GAAG;EACTC,OAAO,eAAE,QAAC,GAAG;IAAA;IAAA;IAAA;EAAA;AACf,CAAC,EACD;EACED,IAAI,EAAE,QAAQ;EACdC,OAAO,eAAE,QAAC,YAAY;IAAA;IAAA;IAAA;EAAA;AACxB,CAAC,EACD;EACED,IAAI,EAAE,mBAAmB;EACzBC,OAAO,eAAE;AACX,CAAC,CACF,CAAC;AAGF,MAAMC,WAAW,GAAGnB,YAAY,CAAC;EAC/BoB,WAAW,EAAE,IAAI;EACjBP,UAAU;EACVF;AACF,CAAC,CAAC;AAEF,MAAMU,IAAI,GAAGnC,QAAQ,CAACoC,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACjEH,IAAI,CAACI,MAAM,eACT,QAAC,KAAK,CAAC,UAAU;EAAA,uBACf,QAAC,WAAW;IAAC,MAAM,EAAEN,WAAY;IAAA,uBAC/B,QAAC,kBAAkB;MAAC,sBAAsB,EAAE,IAAK;MAAC,MAAM,EAAET,MAAO;MAAA,uBAC/D,QAAC,cAAc;QAAC,MAAM,EAAEM;MAAO;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA;EACf;IAAA;IAAA;IAAA;EAAA;AACR;EAAA;EAAA;EAAA;AAAA,QACE,CACpB;;AAED;AACA;AACA;AACAzB,eAAe,EAAE"},"metadata":{},"sourceType":"module","externalDependencies":[]}