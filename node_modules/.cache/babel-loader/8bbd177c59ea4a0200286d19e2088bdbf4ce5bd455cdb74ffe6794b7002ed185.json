{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_Subscriber,_Subscription PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nexport function finalize(callback) {\n  return function (source) {\n    return source.lift(new FinallyOperator(callback));\n  };\n}\nvar FinallyOperator = /*@__PURE__*/function () {\n  function FinallyOperator(callback) {\n    this.callback = callback;\n  }\n  FinallyOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new FinallySubscriber(subscriber, this.callback));\n  };\n  return FinallyOperator;\n}();\nvar FinallySubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(FinallySubscriber, _super);\n  function FinallySubscriber(destination, callback) {\n    var _this = _super.call(this, destination) || this;\n    _this.add(new Subscription(callback));\n    return _this;\n  }\n  return FinallySubscriber;\n}(Subscriber);","map":{"version":3,"mappings":";AACA,OAAO,KAAEA,OAAU,MAAE,OAAM;AAC3B,SAASC,kBAAc,eAAM;AAY7B,SAAMC,YAAU,QAAY,iBAAoB;OAC9C,SAAOC,QAAC,SAA0B;EACnC;IAAA;EAAA;AAED;IACEC,+BAAwC;WAApBA,wBAAoB;IACvC;EAED;iBACS,UAAO,KAAU,GAAI,oBAAkB,QAAU,EAAE;IAC3D;EACH;EAPA,OAOCA;AAOD;IAAmCC,2CAAaC;EAC9CN,mCAAY,QAA4B;WAAxCK,iBACE,YAAM,UAAY;IAClB,SAAQ,GAACC,MAAI,UAAa,aAAW;;IACtC;EACH;EALmC,wBAKlC","names":["tslib_1","Subscriber","Subscription","finalize","FinallyOperator","FinallySubscriber","_super"],"sources":["/Users/air/Downloads/ABLC/node_modules/rxjs/src/internal/operators/finalize.ts"],"sourcesContent":["import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { Observable } from '../Observable';\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\n\n/**\n * Returns an Observable that mirrors the source Observable, but will call a specified function when\n * the source terminates on complete or error.\n * @param {function} callback Function to be called when source terminates.\n * @return {Observable} An Observable that mirrors the source, but will call the specified function on termination.\n * @method finally\n * @owner Observable\n */\nexport function finalize<T>(callback: () => void): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new FinallyOperator(callback));\n}\n\nclass FinallyOperator<T> implements Operator<T, T> {\n  constructor(private callback: () => void) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new FinallySubscriber(subscriber, this.callback));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass FinallySubscriber<T> extends Subscriber<T> {\n  constructor(destination: Subscriber<T>, callback: () => void) {\n    super(destination);\n    this.add(new Subscription(callback));\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}