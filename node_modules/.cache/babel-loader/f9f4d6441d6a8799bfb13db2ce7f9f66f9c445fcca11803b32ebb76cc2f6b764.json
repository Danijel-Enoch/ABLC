{"ast":null,"code":"import { ethers } from \"ethers\";\nimport axios from 'axios';\nconst address = \"0x2c9F84Baa3071Dac7661c48760Ca78f601d95fF1\";\n\n//approve\nasync function approve(amount, token) {\n  const provider = new ethers.providers.Web3Provider(window.ethereum);\n  const signer = provider.getSigner();\n  const abi = [\"function approve(address spender, uint256 amount) returns (bool)\"];\n  const contract = new ethers.Contract(token, abi, signer);\n  const tx = await contract.functions.approve(\"0x2c9F84Baa3071Dac7661c48760Ca78f601d95fF1\", amount);\n  const receipt = await tx.wait();\n  console.log(\"receipt\", receipt);\n}\n\n//create Order\nasync function CreateOrder(orderType, tokenA, tokenB, baseAmount, quoteAmount) {\n  const provider = new ethers.providers.Web3Provider(window.ethereum);\n  const signer = provider.getSigner();\n  const abi = [\"function CreateOrder(string _orderType, address _tokenA, address _tokenB, uint256 _baseAmount, uint256 _quoteAmount) payable\"];\n  const contract = new ethers.Contract(\"0x2c9F84Baa3071Dac7661c48760Ca78f601d95fF1\", abi, signer);\n  const tx = await contract.functions.CreateOrder(orderType.toString(), tokenA.toString(), tokenB.toString(), baseAmount.toString(), quoteAmount.toString());\n  const receipt = await tx.wait();\n  console.log(\"receipt\", receipt);\n}\n_c = CreateOrder;\nexport const createPair = async (orderType, tokenA, tokenB, baseAmount, quoteAmount) => {\n  const provider = new ethers.providers.Web3Provider(window.ethereum);\n  const signer = provider.getSigner();\n  alert(\"approving Token\");\n  await approve(\"10000000000000000000000000000\", tokenA).then(async res => {\n    alert(\"creating Order\");\n    await CreateOrder(orderType, tokenA, tokenB, ethers.utils.parseUnits(baseAmount, 8), ethers.utils.parseUnits(quoteAmount, 18));\n  });\n};\nexport async function ablcPrice() {\n  const abi = [\"function ablcPrice() view returns (uint256)\"];\n  const provider = new ethers.providers.JsonRpcProvider(\"https://bsc-dataseed4.binance.org\");\n  const contract = new ethers.Contract(address, abi, provider);\n  const result = await contract.functions.ablcPrice();\n  console.log(\"result\", parseFloat(result[0].toString()) / 1000000000000000000);\n  const cPrice = parseFloat(result[0].toString()) / 1000000000000000000;\n  return cPrice;\n}\nexport async function UsdtPrice() {\n  const abi = [\"function ablcPrice() view returns (uint256)\"];\n  const provider = new ethers.providers.JsonRpcProvider(\"https://bsc-dataseed4.binance.org\");\n  const contract = new ethers.Contract(address, abi, provider);\n  const result = await contract.functions.ablcPrice();\n  console.log(\"result\", parseFloat(result[0].toString()) / 1000000000000000000);\n  const cPrice = parseFloat(result[0].toString()) / 1000000000000000000;\n  return cPrice;\n}\n_c2 = UsdtPrice;\nexport async function BusdPrice() {\n  const abi = [\"function BusdPrice() view returns (uint256)\"];\n  const provider = new ethers.providers.JsonRpcProvider(\"https://bsc-dataseed4.binance.org\");\n  const contract = new ethers.Contract(address, abi, provider);\n  const result = await contract.functions.BusdPrice();\n  console.log(\"result\", parseFloat(result[0].toString()) / 1000000000000000000);\n  const cPrice = parseFloat(result[0].toString()) / 1000000000000000000;\n  return cPrice;\n}\n_c3 = BusdPrice;\nexport async function BnbPrice() {\n  const abi = [\"function BnbPrice() view returns (uint256)\"];\n  const provider = new ethers.providers.JsonRpcProvider(\"https://bsc-dataseed4.binance.org\");\n  const contract = new ethers.Contract(address, abi, provider);\n  const result = await contract.functions.BnbPrice();\n  console.log(\"result\", parseFloat(result[0].toString()) / 1000000000000000000);\n  const cPrice = parseFloat(result[0].toString()) / 1000000000000000000;\n  return cPrice;\n}\n\n//Cancel Order\n_c4 = BnbPrice;\nasync function cancelOrder(Oid) {\n  const provider = new ethers.providers.Web3Provider(window.ethereum);\n  const signer = provider.getSigner();\n  const abi = [\"function cancelOrder(uint256 id)\"];\n  const contract = new ethers.Contract(address, abi, signer);\n  const tx = await contract.functions.cancelOrder(Oid);\n  const receipt = await tx.wait();\n  console.log(\"receipt\", receipt[0]);\n}\n\n//Exchnage\n\nexport async function Exchange(wallet, id, tokenB, quoteAmount) {\n  const provider = new ethers.providers.Web3Provider(window.ethereum);\n  const signer = provider.getSigner();\n  alert(\"Approving Token\");\n  await approve(\"1000000000000000000000000000\", tokenB).then(async res => {\n    alert(\"Exchanging\");\n    const abi = [\"function Exchange(address _wallet, uint256 id)\"];\n    const contract = new ethers.Contract(\"0x2c9F84Baa3071Dac7661c48760Ca78f601d95fF1\", abi, signer);\n    const tx = await contract.functions.Exchange(wallet, id);\n    const receipt = await tx.wait();\n    console.log(\"receipt\", receipt);\n  });\n}\n\n//get orders\n_c5 = Exchange;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"CreateOrder\");\n$RefreshReg$(_c2, \"UsdtPrice\");\n$RefreshReg$(_c3, \"BusdPrice\");\n$RefreshReg$(_c4, \"BnbPrice\");\n$RefreshReg$(_c5, \"Exchange\");","map":{"version":3,"names":["ethers","axios","address","approve","amount","token","provider","providers","Web3Provider","window","ethereum","signer","getSigner","abi","contract","Contract","tx","functions","receipt","wait","console","log","CreateOrder","orderType","tokenA","tokenB","baseAmount","quoteAmount","toString","createPair","alert","then","res","utils","parseUnits","ablcPrice","JsonRpcProvider","result","parseFloat","cPrice","UsdtPrice","BusdPrice","BnbPrice","cancelOrder","Oid","Exchange","wallet","id"],"sources":["/Users/air/Downloads/ABLC/src/sdk/p2p.js"],"sourcesContent":["import { ethers } from \"ethers\";\nimport axios from 'axios';\n\nconst address = \"0x2c9F84Baa3071Dac7661c48760Ca78f601d95fF1\";\n\n\n//approve\nasync function approve(amount, token) {\n    const provider = new ethers.providers.Web3Provider(window.ethereum)\n    const signer = provider.getSigner()\n    const abi = [\n        \"function approve(address spender, uint256 amount) returns (bool)\"\n    ];\n    const contract = new ethers.Contract(token, abi, signer);\n    const tx = await contract.functions.approve(\"0x2c9F84Baa3071Dac7661c48760Ca78f601d95fF1\", amount);\n\n    const receipt = await tx.wait();\n    console.log(\"receipt\", receipt);\n}\n\n\n//create Order\nasync function CreateOrder(orderType, tokenA, tokenB, baseAmount, quoteAmount) {\n    const provider = new ethers.providers.Web3Provider(window.ethereum)\n    const signer = provider.getSigner()\n    const abi = [\n        \"function CreateOrder(string _orderType, address _tokenA, address _tokenB, uint256 _baseAmount, uint256 _quoteAmount) payable\"\n    ];\n    const contract = new ethers.Contract(\"0x2c9F84Baa3071Dac7661c48760Ca78f601d95fF1\", abi, signer);\n    const tx = await contract.functions.CreateOrder(orderType.toString(), tokenA.toString(), tokenB.toString(), baseAmount.toString(), quoteAmount.toString());\n\n    const receipt = await tx.wait();\n    console.log(\"receipt\", receipt);\n}\n\nexport const createPair = async (orderType, tokenA, tokenB, baseAmount, quoteAmount) => {\n    const provider = new ethers.providers.Web3Provider(window.ethereum)\n    const signer = provider.getSigner()\n    alert(\"approving Token\")\n    await approve(\"10000000000000000000000000000\", tokenA).then(async (res) => {\n        alert(\"creating Order\")\n        await CreateOrder(orderType, tokenA, tokenB, ethers.utils.parseUnits(baseAmount, 8), ethers.utils.parseUnits(quoteAmount, 18));\n    })\n\n}\n\nexport async function ablcPrice() {\n    const abi = [\n        \"function ablcPrice() view returns (uint256)\"\n    ];\n    const provider = new ethers.providers.JsonRpcProvider(\"https://bsc-dataseed4.binance.org\");\n    const contract = new ethers.Contract(address, abi, provider);\n    const result = await contract.functions.ablcPrice();\n    console.log(\"result\", parseFloat(result[0].toString()) / 1000000000000000000);\n    const cPrice = parseFloat(result[0].toString()) / 1000000000000000000;\n    return cPrice;\n}\nexport async function UsdtPrice() {\n    const abi = [\n        \"function ablcPrice() view returns (uint256)\"\n    ];\n    const provider = new ethers.providers.JsonRpcProvider(\"https://bsc-dataseed4.binance.org\");\n    const contract = new ethers.Contract(address, abi, provider);\n    const result = await contract.functions.ablcPrice();\n    console.log(\"result\", parseFloat(result[0].toString()) / 1000000000000000000);\n    const cPrice = parseFloat(result[0].toString()) / 1000000000000000000;\n    return cPrice;\n}\nexport async function BusdPrice() {\n    const abi = [\n        \"function BusdPrice() view returns (uint256)\"\n    ];\n    const provider = new ethers.providers.JsonRpcProvider(\"https://bsc-dataseed4.binance.org\");\n    const contract = new ethers.Contract(address, abi, provider);\n    const result = await contract.functions.BusdPrice();\n    console.log(\"result\", parseFloat(result[0].toString()) / 1000000000000000000);\n    const cPrice = parseFloat(result[0].toString()) / 1000000000000000000;\n    return cPrice;\n}\nexport async function BnbPrice() {\n    const abi = [\n        \"function BnbPrice() view returns (uint256)\"\n    ];\n    const provider = new ethers.providers.JsonRpcProvider(\"https://bsc-dataseed4.binance.org\");\n    const contract = new ethers.Contract(address, abi, provider);\n    const result = await contract.functions.BnbPrice();\n    console.log(\"result\", parseFloat(result[0].toString()) / 1000000000000000000);\n    const cPrice = parseFloat(result[0].toString()) / 1000000000000000000;\n    return cPrice;\n}\n\n//Cancel Order\nasync function cancelOrder(Oid) {\n    const provider = new ethers.providers.Web3Provider(window.ethereum)\n    const signer = provider.getSigner()\n    const abi = [\n        \"function cancelOrder(uint256 id)\"\n    ];\n    const contract = new ethers.Contract(address, abi, signer);\n    const tx = await contract.functions.cancelOrder(Oid);\n\n    const receipt = await tx.wait();\n    console.log(\"receipt\", receipt[0]);\n}\n\n\n//Exchnage\n\n\n\nexport async function Exchange(wallet, id, tokenB, quoteAmount) {\n    const provider = new ethers.providers.Web3Provider(window.ethereum)\n    const signer = provider.getSigner()\n    alert(\"Approving Token\")\n    await approve(\"1000000000000000000000000000\", tokenB).then(async (res) => {\n        alert(\"Exchanging\")\n        const abi = [\n            \"function Exchange(address _wallet, uint256 id)\"\n        ];\n        const contract = new ethers.Contract(\"0x2c9F84Baa3071Dac7661c48760Ca78f601d95fF1\", abi, signer);\n        const tx = await contract.functions.Exchange(wallet, id);\n\n        const receipt = await tx.wait();\n        console.log(\"receipt\", receipt);\n\n    })\n\n}\n\n\n//get orders\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}