{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_Subscription PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscription } from './Subscription';\nvar SubjectSubscription = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(SubjectSubscription, _super);\n  function SubjectSubscription(subject, subscriber) {\n    var _this = _super.call(this) || this;\n    _this.subject = subject;\n    _this.subscriber = subscriber;\n    _this.closed = false;\n    return _this;\n  }\n  SubjectSubscription.prototype.unsubscribe = function () {\n    if (this.closed) {\n      return;\n    }\n    this.closed = true;\n    var subject = this.subject;\n    var observers = subject.observers;\n    this.subject = null;\n    if (!observers || observers.length === 0 || subject.isStopped || subject.closed) {\n      return;\n    }\n    var subscriberIndex = observers.indexOf(this.subscriber);\n    if (subscriberIndex !== -1) {\n      observers.splice(subscriberIndex, 1);\n    }\n  };\n  return SubjectSubscription;\n}(Subscription);\nexport { SubjectSubscription };","map":{"version":3,"mappings":";AAEA,OAAO,KAAEA,aAAc,OAAM;AAO7B;IAA4CC,6CAAYC;EAGtDF,qCAAsC,EAASE;WAA/CD,mBACE,QAAO,YACR;IAFkB,uBAAO,CAAY;IAASE,gBAAUC,OAAV;IAF/CD,gBAAkB,aAAM;;IAIvB;EAED;qBACiB,UAAE;QACf,WAAO;MACR;IAED;IAEA,IAAM,OAAO,GAAG,IAAI;IACpB,IAAMC,UAAS,IAAG,QAAQ;IAE1B,IAAIC,SAAQ,GAAGD,OAAK;IAEpB,IAAI,CAACA,UAAS,IAAI;QAChB,UAAO;MACR;IAED;IAEA,IAAIE,eAAe,YAAS;QAC1BA,eAAU,KAAO;MAClBD;IACF;EACH;EA7B4C,0BA6B3C","names":["tslib_1","SubjectSubscription","_super","_this","subject","observers","subscriberIndex"],"sources":["/Users/air/Downloads/ABLC/node_modules/rxjs/src/internal/SubjectSubscription.ts"],"sourcesContent":["import { Subject } from './Subject';\nimport { Observer } from './types';\nimport { Subscription } from './Subscription';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class SubjectSubscription<T> extends Subscription {\n  closed: boolean = false;\n\n  constructor(public subject: Subject<T>, public subscriber: Observer<T>) {\n    super();\n  }\n\n  unsubscribe() {\n    if (this.closed) {\n      return;\n    }\n\n    this.closed = true;\n\n    const subject = this.subject;\n    const observers = subject.observers;\n\n    this.subject = null;\n\n    if (!observers || observers.length === 0 || subject.isStopped || subject.closed) {\n      return;\n    }\n\n    const subscriberIndex = observers.indexOf(this.subscriber);\n\n    if (subscriberIndex !== -1) {\n      observers.splice(subscriberIndex, 1);\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}