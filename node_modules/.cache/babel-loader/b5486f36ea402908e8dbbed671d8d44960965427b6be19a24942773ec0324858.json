{"ast":null,"code":"/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nvar UnsubscriptionErrorImpl = /*@__PURE__*/function () {\n  function UnsubscriptionErrorImpl(errors) {\n    Error.call(this);\n    this.message = errors ? errors.length + \" errors occurred during unsubscription:\\n\" + errors.map(function (err, i) {\n      return i + 1 + \") \" + err.toString();\n    }).join('\\n  ') : '';\n    this.name = 'UnsubscriptionError';\n    this.errors = errors;\n    return this;\n  }\n  UnsubscriptionErrorImpl.prototype = /*@__PURE__*/Object.create(Error.prototype);\n  return UnsubscriptionErrorImpl;\n}();\nexport var UnsubscriptionError = UnsubscriptionErrorImpl;","map":{"version":3,"mappings":"AAQA;IACEA,uBAAS,gBAAgD;WAClDA,uBAAY;IACjBC,KAAK,UAAU;QACV,QAAO,SAAM,GAEdC,MAAK,OAAG,8CAAsB;MAAA;IAAA;IAClC,IAAI,CAACC,OAAM,qBAAU;IACrB,WAAW,GAACD;IACb;EAED;EAEAF,uBAAO,UAAwB;EAC7B,OAACA;AAML","names":["UnsubscriptionErrorImpl","Error","errors","name"],"sources":["/Users/air/Downloads/ABLC/node_modules/rxjs/src/internal/util/UnsubscriptionError.ts"],"sourcesContent":["export interface UnsubscriptionError extends Error {\n  readonly errors: any[];\n}\n\nexport interface UnsubscriptionErrorCtor {\n  new(errors: any[]): UnsubscriptionError;\n}\n\nconst UnsubscriptionErrorImpl = (() => {\n  function UnsubscriptionErrorImpl(this: any, errors: any[]) {\n    Error.call(this);\n    this.message = errors ?\n      `${errors.length} errors occurred during unsubscription:\n${errors.map((err, i) => `${i + 1}) ${err.toString()}`).join('\\n  ')}` : '';\n    this.name = 'UnsubscriptionError';\n    this.errors = errors;\n    return this;\n  }\n\n  UnsubscriptionErrorImpl.prototype = Object.create(Error.prototype);\n\n  return UnsubscriptionErrorImpl;\n})();\n\n/**\n * An error thrown when one or more errors have occurred during the\n * `unsubscribe` of a {@link Subscription}.\n */\nexport const UnsubscriptionError: UnsubscriptionErrorCtor = UnsubscriptionErrorImpl as any;"]},"metadata":{},"sourceType":"module","externalDependencies":[]}