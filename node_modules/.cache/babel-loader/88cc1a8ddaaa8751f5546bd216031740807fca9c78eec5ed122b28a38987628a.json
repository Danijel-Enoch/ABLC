{"ast":null,"code":"import { isAndroid } from \"./chunk-KHDDZZDB.js\";\nimport { getWalletConnectConnector } from \"./chunk-53QLEXS7.js\";\n\n// src/wallets/walletConnectors/trustWallet/trustWallet.ts\nimport { InjectedConnector } from \"wagmi/connectors/injected\";\nvar trustWallet = _ref => {\n  let {\n    chains,\n    shimDisconnect\n  } = _ref;\n  return {\n    id: \"trust\",\n    name: \"Trust Wallet\",\n    iconUrl: async () => (await import(\"./trustWallet-TQQHHBST.js\")).default,\n    iconBackground: \"#fff\",\n    downloadUrls: {\n      android: \"https://play.google.com/store/apps/details?id=com.wallet.crypto.trustapp\",\n      ios: \"https://apps.apple.com/us/app/trust-crypto-bitcoin-wallet/id1288339409\",\n      qrCode: \"https://link.trustwallet.com\"\n    },\n    createConnector: () => {\n      var _a;\n      const inAppBrowser = Boolean(typeof window !== \"undefined\" && ((_a = window.ethereum) == null ? void 0 : _a.isTrust));\n      if (inAppBrowser) {\n        return {\n          connector: new InjectedConnector({\n            chains,\n            options: {\n              shimDisconnect\n            }\n          })\n        };\n      }\n      const connector = getWalletConnectConnector({\n        chains\n      });\n      return {\n        connector,\n        mobile: {\n          getUri: async () => {\n            const {\n              uri\n            } = (await connector.getProvider()).connector;\n            return isAndroid() ? uri : `https://link.trustwallet.com/wc?uri=${encodeURIComponent(uri)}`;\n          }\n        },\n        qrCode: {\n          getUri: async () => (await connector.getProvider()).connector.uri,\n          instructions: {\n            learnMoreUrl: \"https://trustwallet.com/blog/an-introduction-to-trustwallet\",\n            steps: [{\n              description: \"Put Trust Wallet on your home screen for faster access to your wallet.\",\n              step: \"install\",\n              title: \"Open the Trust Wallet app\"\n            }, {\n              description: \"Create a new wallet or import an existing one.\",\n              step: \"create\",\n              title: \"Create or Import a Wallet\"\n            }, {\n              description: \"Choose New Connection, then scan the QR code and confirm the prompt to connect.\",\n              step: \"scan\",\n              title: \"Tap WalletConnect in Settings\"\n            }]\n          }\n        }\n      };\n    }\n  };\n};\nexport { trustWallet };","map":{"version":3,"names":["isAndroid","getWalletConnectConnector","InjectedConnector","trustWallet","chains","shimDisconnect","id","name","iconUrl","default","iconBackground","downloadUrls","android","ios","qrCode","createConnector","_a","inAppBrowser","Boolean","window","ethereum","isTrust","connector","options","mobile","getUri","uri","getProvider","encodeURIComponent","instructions","learnMoreUrl","steps","description","step","title"],"sources":["/Users/air/Downloads/ABLC/node_modules/@rainbow-me/rainbowkit/dist/wallets/walletConnectors/chunk-JFOMGTJR.js"],"sourcesContent":["import {\n  isAndroid\n} from \"./chunk-KHDDZZDB.js\";\nimport {\n  getWalletConnectConnector\n} from \"./chunk-53QLEXS7.js\";\n\n// src/wallets/walletConnectors/trustWallet/trustWallet.ts\nimport { InjectedConnector } from \"wagmi/connectors/injected\";\nvar trustWallet = ({\n  chains,\n  shimDisconnect\n}) => ({\n  id: \"trust\",\n  name: \"Trust Wallet\",\n  iconUrl: async () => (await import(\"./trustWallet-TQQHHBST.js\")).default,\n  iconBackground: \"#fff\",\n  downloadUrls: {\n    android: \"https://play.google.com/store/apps/details?id=com.wallet.crypto.trustapp\",\n    ios: \"https://apps.apple.com/us/app/trust-crypto-bitcoin-wallet/id1288339409\",\n    qrCode: \"https://link.trustwallet.com\"\n  },\n  createConnector: () => {\n    var _a;\n    const inAppBrowser = Boolean(typeof window !== \"undefined\" && ((_a = window.ethereum) == null ? void 0 : _a.isTrust));\n    if (inAppBrowser) {\n      return {\n        connector: new InjectedConnector({\n          chains,\n          options: { shimDisconnect }\n        })\n      };\n    }\n    const connector = getWalletConnectConnector({ chains });\n    return {\n      connector,\n      mobile: {\n        getUri: async () => {\n          const { uri } = (await connector.getProvider()).connector;\n          return isAndroid() ? uri : `https://link.trustwallet.com/wc?uri=${encodeURIComponent(uri)}`;\n        }\n      },\n      qrCode: {\n        getUri: async () => (await connector.getProvider()).connector.uri,\n        instructions: {\n          learnMoreUrl: \"https://trustwallet.com/blog/an-introduction-to-trustwallet\",\n          steps: [\n            {\n              description: \"Put Trust Wallet on your home screen for faster access to your wallet.\",\n              step: \"install\",\n              title: \"Open the Trust Wallet app\"\n            },\n            {\n              description: \"Create a new wallet or import an existing one.\",\n              step: \"create\",\n              title: \"Create or Import a Wallet\"\n            },\n            {\n              description: \"Choose New Connection, then scan the QR code and confirm the prompt to connect.\",\n              step: \"scan\",\n              title: \"Tap WalletConnect in Settings\"\n            }\n          ]\n        }\n      }\n    };\n  }\n});\n\nexport {\n  trustWallet\n};\n"],"mappings":"AAAA,SACEA,SAAS,QACJ,qBAAqB;AAC5B,SACEC,yBAAyB,QACpB,qBAAqB;;AAE5B;AACA,SAASC,iBAAiB,QAAQ,2BAA2B;AAC7D,IAAIC,WAAW,GAAG;EAAA,IAAC;IACjBC,MAAM;IACNC;EACF,CAAC;EAAA,OAAM;IACLC,EAAE,EAAE,OAAO;IACXC,IAAI,EAAE,cAAc;IACpBC,OAAO,EAAE,YAAY,CAAC,MAAM,MAAM,CAAC,2BAA2B,CAAC,EAAEC,OAAO;IACxEC,cAAc,EAAE,MAAM;IACtBC,YAAY,EAAE;MACZC,OAAO,EAAE,0EAA0E;MACnFC,GAAG,EAAE,wEAAwE;MAC7EC,MAAM,EAAE;IACV,CAAC;IACDC,eAAe,EAAE,MAAM;MACrB,IAAIC,EAAE;MACN,MAAMC,YAAY,GAAGC,OAAO,CAAC,OAAOC,MAAM,KAAK,WAAW,KAAK,CAACH,EAAE,GAAGG,MAAM,CAACC,QAAQ,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGJ,EAAE,CAACK,OAAO,CAAC,CAAC;MACrH,IAAIJ,YAAY,EAAE;QAChB,OAAO;UACLK,SAAS,EAAE,IAAIpB,iBAAiB,CAAC;YAC/BE,MAAM;YACNmB,OAAO,EAAE;cAAElB;YAAe;UAC5B,CAAC;QACH,CAAC;MACH;MACA,MAAMiB,SAAS,GAAGrB,yBAAyB,CAAC;QAAEG;MAAO,CAAC,CAAC;MACvD,OAAO;QACLkB,SAAS;QACTE,MAAM,EAAE;UACNC,MAAM,EAAE,YAAY;YAClB,MAAM;cAAEC;YAAI,CAAC,GAAG,CAAC,MAAMJ,SAAS,CAACK,WAAW,EAAE,EAAEL,SAAS;YACzD,OAAOtB,SAAS,EAAE,GAAG0B,GAAG,GAAI,uCAAsCE,kBAAkB,CAACF,GAAG,CAAE,EAAC;UAC7F;QACF,CAAC;QACDZ,MAAM,EAAE;UACNW,MAAM,EAAE,YAAY,CAAC,MAAMH,SAAS,CAACK,WAAW,EAAE,EAAEL,SAAS,CAACI,GAAG;UACjEG,YAAY,EAAE;YACZC,YAAY,EAAE,6DAA6D;YAC3EC,KAAK,EAAE,CACL;cACEC,WAAW,EAAE,wEAAwE;cACrFC,IAAI,EAAE,SAAS;cACfC,KAAK,EAAE;YACT,CAAC,EACD;cACEF,WAAW,EAAE,gDAAgD;cAC7DC,IAAI,EAAE,QAAQ;cACdC,KAAK,EAAE;YACT,CAAC,EACD;cACEF,WAAW,EAAE,iFAAiF;cAC9FC,IAAI,EAAE,MAAM;cACZC,KAAK,EAAE;YACT,CAAC;UAEL;QACF;MACF,CAAC;IACH;EACF,CAAC;AAAA,CAAC;AAEF,SACE/B,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}