{"ast":null,"code":"/** PURE_IMPORTS_START _scheduleObservable,_schedulePromise,_scheduleArray,_scheduleIterable,_util_isInteropObservable,_util_isPromise,_util_isArrayLike,_util_isIterable PURE_IMPORTS_END */\nimport { scheduleObservable } from './scheduleObservable';\nimport { schedulePromise } from './schedulePromise';\nimport { scheduleArray } from './scheduleArray';\nimport { scheduleIterable } from './scheduleIterable';\nimport { isInteropObservable } from '../util/isInteropObservable';\nimport { isPromise } from '../util/isPromise';\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isIterable } from '../util/isIterable';\nexport function scheduled(input, scheduler) {\n  if (input != null) {\n    if (isInteropObservable(input)) {\n      return scheduleObservable(input, scheduler);\n    } else if (isPromise(input)) {\n      return schedulePromise(input, scheduler);\n    } else if (isArrayLike(input)) {\n      return scheduleArray(input, scheduler);\n    } else if (isIterable(input) || typeof input === 'string') {\n      return scheduleIterable(input, scheduler);\n    }\n  }\n  throw new TypeError((input !== null && typeof input || input) + ' is not observable');\n}","map":{"version":3,"mappings":"AAAA;AACA,SAASA,kBAAiB,QAAM,sBAAoB;AACpD,SAASC,eAAe,QAAM,mBAAkB;AAChD,SAASC,qBAAkB,iBAAM;AAEjC,SAASC,wBAAqB,oBAAM;AACpC,SAASC,mBAAiB,qCAAoB;AAC9C,SAASC,iBAAa,mBAAM;AAC5B,SAASC,WAAU,QAAQ,qBAAqB;AAahD,SAAMC,UAAU,QAAa,oBAAmD;OAC9E,SAASC,SAAU;MACjBC,KAAI;QACFL,mBAAO,MAAkB,CAAC;MAC3B;WACC,aAAO,SAAgB;MACxB;WACC,eAAO,MAAc;MACtB;WACC,cAAO,WAAiB,OAAOK,UAAW;MAC3C;IACF;EAED;EACD","names":["scheduleObservable","schedulePromise","scheduleArray","scheduleIterable","isInteropObservable","isPromise","isArrayLike","isIterable","scheduled","input"],"sources":["/Users/air/Downloads/ABLC/node_modules/rxjs/src/internal/scheduled/scheduled.ts"],"sourcesContent":["import { scheduleObservable } from './scheduleObservable';\nimport { schedulePromise } from './schedulePromise';\nimport { scheduleArray } from './scheduleArray';\nimport { scheduleIterable } from './scheduleIterable';\nimport { ObservableInput, SchedulerLike, Observable } from 'rxjs';\nimport { isInteropObservable } from '../util/isInteropObservable';\nimport { isPromise } from '../util/isPromise';\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isIterable } from '../util/isIterable';\n\n/**\n * Converts from a common {@link ObservableInput} type to an observable where subscription and emissions\n * are scheduled on the provided scheduler.\n *\n * @see from\n * @see of\n *\n * @param input The observable, array, promise, iterable, etc you would like to schedule\n * @param scheduler The scheduler to use to schedule the subscription and emissions from\n * the returned observable.\n */\nexport function scheduled<T>(input: ObservableInput<T>, scheduler: SchedulerLike): Observable<T> {\n  if (input != null) {\n    if (isInteropObservable(input)) {\n      return scheduleObservable(input, scheduler);\n    } else if (isPromise(input)) {\n      return schedulePromise(input, scheduler);\n    } else if (isArrayLike(input)) {\n      return scheduleArray(input, scheduler);\n    }  else if (isIterable(input) || typeof input === 'string') {\n      return scheduleIterable(input, scheduler);\n    }\n  }\n\n  throw new TypeError((input !== null && typeof input || input) + ' is not observable');\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}