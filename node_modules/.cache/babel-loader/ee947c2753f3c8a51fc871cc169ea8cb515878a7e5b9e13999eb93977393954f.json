{"ast":null,"code":"import { Connector, __privateAdd, __privateGet, __privateMethod, __privateSet, __publicField } from \"./chunk-5NCTPR6C.js\";\n\n// src/coinbaseWallet.ts\nimport { AddChainError, ChainNotConfiguredError, SwitchChainError, UserRejectedRequestError, normalizeChainId } from \"@wagmi/core\";\nimport { providers } from \"ethers\";\nimport { getAddress, hexValue } from \"ethers/lib/utils.js\";\nvar _client, _provider, _isUserRejectedRequestError, isUserRejectedRequestError_fn;\nvar CoinbaseWalletConnector = class extends Connector {\n  constructor(_ref) {\n    let {\n      chains,\n      options\n    } = _ref;\n    super({\n      chains,\n      options: {\n        reloadOnDisconnect: false,\n        ...options\n      }\n    });\n    __privateAdd(this, _isUserRejectedRequestError);\n    __publicField(this, \"id\", \"coinbaseWallet\");\n    __publicField(this, \"name\", \"Coinbase Wallet\");\n    __publicField(this, \"ready\", true);\n    __privateAdd(this, _client, void 0);\n    __privateAdd(this, _provider, void 0);\n    __publicField(this, \"onAccountsChanged\", accounts => {\n      if (accounts.length === 0) this.emit(\"disconnect\");else this.emit(\"change\", {\n        account: getAddress(accounts[0])\n      });\n    });\n    __publicField(this, \"onChainChanged\", chainId => {\n      const id = normalizeChainId(chainId);\n      const unsupported = this.isChainUnsupported(id);\n      this.emit(\"change\", {\n        chain: {\n          id,\n          unsupported\n        }\n      });\n    });\n    __publicField(this, \"onDisconnect\", () => {\n      this.emit(\"disconnect\");\n    });\n  }\n  async connect() {\n    let {\n      chainId\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    try {\n      const provider = await this.getProvider();\n      provider.on(\"accountsChanged\", this.onAccountsChanged);\n      provider.on(\"chainChanged\", this.onChainChanged);\n      provider.on(\"disconnect\", this.onDisconnect);\n      this.emit(\"message\", {\n        type: \"connecting\"\n      });\n      const accounts = await provider.enable();\n      const account = getAddress(accounts[0]);\n      let id = await this.getChainId();\n      let unsupported = this.isChainUnsupported(id);\n      if (chainId && id !== chainId) {\n        const chain = await this.switchChain(chainId);\n        id = chain.id;\n        unsupported = this.isChainUnsupported(id);\n      }\n      return {\n        account,\n        chain: {\n          id,\n          unsupported\n        },\n        provider: new providers.Web3Provider(provider)\n      };\n    } catch (error) {\n      if (/(user closed modal|accounts received is empty)/i.test(error.message)) throw new UserRejectedRequestError(error);\n      throw error;\n    }\n  }\n  async disconnect() {\n    if (!__privateGet(this, _provider)) return;\n    const provider = await this.getProvider();\n    provider.removeListener(\"accountsChanged\", this.onAccountsChanged);\n    provider.removeListener(\"chainChanged\", this.onChainChanged);\n    provider.removeListener(\"disconnect\", this.onDisconnect);\n    provider.disconnect();\n    provider.close();\n  }\n  async getAccount() {\n    const provider = await this.getProvider();\n    const accounts = await provider.request({\n      method: \"eth_accounts\"\n    });\n    return getAddress(accounts[0]);\n  }\n  async getChainId() {\n    const provider = await this.getProvider();\n    const chainId = normalizeChainId(provider.chainId);\n    return chainId;\n  }\n  async getProvider() {\n    if (!__privateGet(this, _provider)) {\n      let CoinbaseWalletSDK = (await import(\"@coinbase/wallet-sdk\")).default;\n      if (typeof CoinbaseWalletSDK !== \"function\" && typeof CoinbaseWalletSDK.default === \"function\") CoinbaseWalletSDK = CoinbaseWalletSDK.default;\n      __privateSet(this, _client, new CoinbaseWalletSDK(this.options));\n      class WalletProvider {}\n      class Client {}\n      const walletExtensionChainId = __privateGet(this, _client).walletExtension?.getChainId();\n      const chain = this.chains.find(chain2 => this.options.chainId ? chain2.id === this.options.chainId : chain2.id === walletExtensionChainId) || this.chains[0];\n      const chainId = this.options.chainId || chain?.id;\n      const jsonRpcUrl = this.options.jsonRpcUrl || chain?.rpcUrls.default.http[0];\n      __privateSet(this, _provider, __privateGet(this, _client).makeWeb3Provider(jsonRpcUrl, chainId));\n    }\n    return __privateGet(this, _provider);\n  }\n  async getSigner() {\n    let {\n      chainId\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const [provider, account] = await Promise.all([this.getProvider(), this.getAccount()]);\n    return new providers.Web3Provider(provider, chainId).getSigner(account);\n  }\n  async isAuthorized() {\n    try {\n      const account = await this.getAccount();\n      return !!account;\n    } catch {\n      return false;\n    }\n  }\n  async switchChain(chainId) {\n    const provider = await this.getProvider();\n    const id = hexValue(chainId);\n    try {\n      await provider.request({\n        method: \"wallet_switchEthereumChain\",\n        params: [{\n          chainId: id\n        }]\n      });\n      return this.chains.find(x => x.id === chainId) ?? {\n        id: chainId,\n        name: `Chain ${id}`,\n        network: `${id}`,\n        nativeCurrency: {\n          name: \"Ether\",\n          decimals: 18,\n          symbol: \"ETH\"\n        },\n        rpcUrls: {\n          default: {\n            http: [\"\"]\n          }\n        }\n      };\n    } catch (error) {\n      const chain = this.chains.find(x => x.id === chainId);\n      if (!chain) throw new ChainNotConfiguredError({\n        chainId,\n        connectorId: this.id\n      });\n      if (error.code === 4902) {\n        try {\n          await provider.request({\n            method: \"wallet_addEthereumChain\",\n            params: [{\n              chainId: id,\n              chainName: chain.name,\n              nativeCurrency: chain.nativeCurrency,\n              rpcUrls: [chain.rpcUrls.public?.http[0] ?? chain.rpcUrls.default.http[0]],\n              blockExplorerUrls: this.getBlockExplorerUrls(chain)\n            }]\n          });\n          return chain;\n        } catch (addError) {\n          if (__privateMethod(this, _isUserRejectedRequestError, isUserRejectedRequestError_fn).call(this, addError)) throw new UserRejectedRequestError(addError);\n          throw new AddChainError();\n        }\n      }\n      if (__privateMethod(this, _isUserRejectedRequestError, isUserRejectedRequestError_fn).call(this, error)) throw new UserRejectedRequestError(error);\n      throw new SwitchChainError(error);\n    }\n  }\n  async watchAsset(_ref2) {\n    let {\n      address,\n      decimals = 18,\n      image,\n      symbol\n    } = _ref2;\n    const provider = await this.getProvider();\n    return provider.request({\n      method: \"wallet_watchAsset\",\n      params: {\n        type: \"ERC20\",\n        options: {\n          address,\n          decimals,\n          image,\n          symbol\n        }\n      }\n    });\n  }\n};\n_client = new WeakMap();\n_provider = new WeakMap();\n_isUserRejectedRequestError = new WeakSet();\nisUserRejectedRequestError_fn = function (error) {\n  return /(user rejected)/i.test(error.message);\n};\nexport { CoinbaseWalletConnector };","map":{"version":3,"names":["Connector","__privateAdd","__privateGet","__privateMethod","__privateSet","__publicField","AddChainError","ChainNotConfiguredError","SwitchChainError","UserRejectedRequestError","normalizeChainId","providers","getAddress","hexValue","_client","_provider","_isUserRejectedRequestError","isUserRejectedRequestError_fn","CoinbaseWalletConnector","constructor","chains","options","reloadOnDisconnect","accounts","length","emit","account","chainId","id","unsupported","isChainUnsupported","chain","connect","provider","getProvider","on","onAccountsChanged","onChainChanged","onDisconnect","type","enable","getChainId","switchChain","Web3Provider","error","test","message","disconnect","removeListener","close","getAccount","request","method","CoinbaseWalletSDK","default","WalletProvider","Client","walletExtensionChainId","walletExtension","find","chain2","jsonRpcUrl","rpcUrls","http","makeWeb3Provider","getSigner","Promise","all","isAuthorized","params","x","name","network","nativeCurrency","decimals","symbol","connectorId","code","chainName","public","blockExplorerUrls","getBlockExplorerUrls","addError","call","watchAsset","address","image","WeakMap","WeakSet"],"sources":["/Users/air/Downloads/ABLC/node_modules/@wagmi/connectors/dist/coinbaseWallet.js"],"sourcesContent":["import {\n  Connector,\n  __privateAdd,\n  __privateGet,\n  __privateMethod,\n  __privateSet,\n  __publicField\n} from \"./chunk-5NCTPR6C.js\";\n\n// src/coinbaseWallet.ts\nimport {\n  AddChainError,\n  ChainNotConfiguredError,\n  SwitchChainError,\n  UserRejectedRequestError,\n  normalizeChainId\n} from \"@wagmi/core\";\nimport { providers } from \"ethers\";\nimport { getAddress, hexValue } from \"ethers/lib/utils.js\";\nvar _client, _provider, _isUserRejectedRequestError, isUserRejectedRequestError_fn;\nvar CoinbaseWalletConnector = class extends Connector {\n  constructor({ chains, options }) {\n    super({\n      chains,\n      options: {\n        reloadOnDisconnect: false,\n        ...options\n      }\n    });\n    __privateAdd(this, _isUserRejectedRequestError);\n    __publicField(this, \"id\", \"coinbaseWallet\");\n    __publicField(this, \"name\", \"Coinbase Wallet\");\n    __publicField(this, \"ready\", true);\n    __privateAdd(this, _client, void 0);\n    __privateAdd(this, _provider, void 0);\n    __publicField(this, \"onAccountsChanged\", (accounts) => {\n      if (accounts.length === 0)\n        this.emit(\"disconnect\");\n      else\n        this.emit(\"change\", { account: getAddress(accounts[0]) });\n    });\n    __publicField(this, \"onChainChanged\", (chainId) => {\n      const id = normalizeChainId(chainId);\n      const unsupported = this.isChainUnsupported(id);\n      this.emit(\"change\", { chain: { id, unsupported } });\n    });\n    __publicField(this, \"onDisconnect\", () => {\n      this.emit(\"disconnect\");\n    });\n  }\n  async connect({ chainId } = {}) {\n    try {\n      const provider = await this.getProvider();\n      provider.on(\"accountsChanged\", this.onAccountsChanged);\n      provider.on(\"chainChanged\", this.onChainChanged);\n      provider.on(\"disconnect\", this.onDisconnect);\n      this.emit(\"message\", { type: \"connecting\" });\n      const accounts = await provider.enable();\n      const account = getAddress(accounts[0]);\n      let id = await this.getChainId();\n      let unsupported = this.isChainUnsupported(id);\n      if (chainId && id !== chainId) {\n        const chain = await this.switchChain(chainId);\n        id = chain.id;\n        unsupported = this.isChainUnsupported(id);\n      }\n      return {\n        account,\n        chain: { id, unsupported },\n        provider: new providers.Web3Provider(\n          provider\n        )\n      };\n    } catch (error) {\n      if (/(user closed modal|accounts received is empty)/i.test(\n        error.message\n      ))\n        throw new UserRejectedRequestError(error);\n      throw error;\n    }\n  }\n  async disconnect() {\n    if (!__privateGet(this, _provider))\n      return;\n    const provider = await this.getProvider();\n    provider.removeListener(\"accountsChanged\", this.onAccountsChanged);\n    provider.removeListener(\"chainChanged\", this.onChainChanged);\n    provider.removeListener(\"disconnect\", this.onDisconnect);\n    provider.disconnect();\n    provider.close();\n  }\n  async getAccount() {\n    const provider = await this.getProvider();\n    const accounts = await provider.request({\n      method: \"eth_accounts\"\n    });\n    return getAddress(accounts[0]);\n  }\n  async getChainId() {\n    const provider = await this.getProvider();\n    const chainId = normalizeChainId(provider.chainId);\n    return chainId;\n  }\n  async getProvider() {\n    if (!__privateGet(this, _provider)) {\n      let CoinbaseWalletSDK = (await import(\"@coinbase/wallet-sdk\")).default;\n      if (typeof CoinbaseWalletSDK !== \"function\" && typeof CoinbaseWalletSDK.default === \"function\")\n        CoinbaseWalletSDK = CoinbaseWalletSDK.default;\n      __privateSet(this, _client, new CoinbaseWalletSDK(this.options));\n      class WalletProvider {\n      }\n      class Client {\n      }\n      const walletExtensionChainId = __privateGet(this, _client).walletExtension?.getChainId();\n      const chain = this.chains.find(\n        (chain2) => this.options.chainId ? chain2.id === this.options.chainId : chain2.id === walletExtensionChainId\n      ) || this.chains[0];\n      const chainId = this.options.chainId || chain?.id;\n      const jsonRpcUrl = this.options.jsonRpcUrl || chain?.rpcUrls.default.http[0];\n      __privateSet(this, _provider, __privateGet(this, _client).makeWeb3Provider(jsonRpcUrl, chainId));\n    }\n    return __privateGet(this, _provider);\n  }\n  async getSigner({ chainId } = {}) {\n    const [provider, account] = await Promise.all([\n      this.getProvider(),\n      this.getAccount()\n    ]);\n    return new providers.Web3Provider(\n      provider,\n      chainId\n    ).getSigner(account);\n  }\n  async isAuthorized() {\n    try {\n      const account = await this.getAccount();\n      return !!account;\n    } catch {\n      return false;\n    }\n  }\n  async switchChain(chainId) {\n    const provider = await this.getProvider();\n    const id = hexValue(chainId);\n    try {\n      await provider.request({\n        method: \"wallet_switchEthereumChain\",\n        params: [{ chainId: id }]\n      });\n      return this.chains.find((x) => x.id === chainId) ?? {\n        id: chainId,\n        name: `Chain ${id}`,\n        network: `${id}`,\n        nativeCurrency: { name: \"Ether\", decimals: 18, symbol: \"ETH\" },\n        rpcUrls: { default: { http: [\"\"] } }\n      };\n    } catch (error) {\n      const chain = this.chains.find((x) => x.id === chainId);\n      if (!chain)\n        throw new ChainNotConfiguredError({ chainId, connectorId: this.id });\n      if (error.code === 4902) {\n        try {\n          await provider.request({\n            method: \"wallet_addEthereumChain\",\n            params: [\n              {\n                chainId: id,\n                chainName: chain.name,\n                nativeCurrency: chain.nativeCurrency,\n                rpcUrls: [\n                  chain.rpcUrls.public?.http[0] ?? chain.rpcUrls.default.http[0]\n                ],\n                blockExplorerUrls: this.getBlockExplorerUrls(chain)\n              }\n            ]\n          });\n          return chain;\n        } catch (addError) {\n          if (__privateMethod(this, _isUserRejectedRequestError, isUserRejectedRequestError_fn).call(this, addError))\n            throw new UserRejectedRequestError(addError);\n          throw new AddChainError();\n        }\n      }\n      if (__privateMethod(this, _isUserRejectedRequestError, isUserRejectedRequestError_fn).call(this, error))\n        throw new UserRejectedRequestError(error);\n      throw new SwitchChainError(error);\n    }\n  }\n  async watchAsset({\n    address,\n    decimals = 18,\n    image,\n    symbol\n  }) {\n    const provider = await this.getProvider();\n    return provider.request({\n      method: \"wallet_watchAsset\",\n      params: {\n        type: \"ERC20\",\n        options: {\n          address,\n          decimals,\n          image,\n          symbol\n        }\n      }\n    });\n  }\n};\n_client = new WeakMap();\n_provider = new WeakMap();\n_isUserRejectedRequestError = new WeakSet();\nisUserRejectedRequestError_fn = function(error) {\n  return /(user rejected)/i.test(error.message);\n};\nexport {\n  CoinbaseWalletConnector\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}